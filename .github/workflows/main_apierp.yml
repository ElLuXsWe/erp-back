name: Build and deploy Node.js app to Azure Web App - ApiErp

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Instalar dependencias y ejecutar pruebas con cobertura
        run: |
          npm ci
          npx jest --coverage

      - name: Reconstruir entorno para producción
        run: |
          rm -rf node_modules package-lock.json
          npm ci --omit=dev
          npm rebuild bcrypt --build-from-source

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_18092DB78E4F48B1A46793E333921C9E }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_3E1B5DC0C2CF4760BE4111FFE78F137A }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_1BA36FE0F1CF45BF8DC2FD77337DF33F }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'ApiErp'
          slot-name: 'Production'
          package: .

  backend-tests:
    runs-on: ubuntu-latest
    env:
      DB_HOST: bderp.postgres.database.azure.com
      DB_USER: Admin1
      DB_PASS: Naranjalimon1
      DB_NAME: postgres
      DB_PORT: 5432

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Instalar dependencias
        run: npm install

      - name: Probar conexión a la base de datos
        run: node test-db-connection.js

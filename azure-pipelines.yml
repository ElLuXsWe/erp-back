trigger:
- main

pool:
  name: 'Default'  # Asegúrate que es el nombre correcto de tu agente self-hosted

variables:
  appName: 'ApiErp'

stages:

# -------- STAGE BUILD --------
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildJob
    displayName: 'Build Job'
    steps:
    - checkout: self

    - task: NodeTool@0
      inputs:
        versionSpec: '22.x'
      displayName: 'Instalar Node.js'

    - script: |
        npm ci
        echo "Build completado"
      displayName: 'Instalar dependencias'

# -------- STAGE TEST --------
- stage: Test
  displayName: 'Test Stage'
  dependsOn: Build
  jobs:
  - job: TestJob
    displayName: 'Test Job'
    steps:
    - checkout: self

    - task: NodeTool@0
      inputs:
        versionSpec: '22.x'
      displayName: 'Instalar Node.js'

    - script: |
        npm ci
        npx jest --coverage
      displayName: 'Ejecutar pruebas unitarias'

# -------- STAGE DEPLOY --------
- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Test
  jobs:
  - job: DeployJob
    displayName: 'Deploy Job'
    steps:
    - checkout: self

    - task: NodeTool@0
      inputs:
        versionSpec: '22.x'
      displayName: 'Instalar Node.js'

    # Empaquetar la aplicación
    - script: |
        echo "Empaquetando la aplicación..."
        zip -r app.zip . -x "*.git*" "node_modules/*" "coverage/*"
      displayName: 'Crear archivo ZIP'

    # Tarea de deploy al App Service
    - task: AzureWebApp@1
      displayName: 'Desplegar a Azure Web App'
      inputs:
        azureSubscription: 'back erp'   # Tu conexión de servicio en Azure DevOps
        appName: 'ApiErp'               # Nombre exacto de tu App Service en Azure
        package: '$(System.DefaultWorkingDirectory)/**/app.zip'  # Ruta al ZIP creado
